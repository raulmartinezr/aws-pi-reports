# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: ["main"]
    tags: ["v*"]
  pull_request:
    branches: ["main"]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'WIP')"
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Cache Poetry
        uses: actions/cache@v3
        with:
          path: |
            ~/.local
            ~/.cache/pypoetry/cache
            ~/.cache/pypoetry/artifacts
            ~/work/aws-pi-reports/aws-pi-reports/.venv
          key: poetry-cache-${{ runner.os }}-${{ hashFiles('**/poetry.lock','**/.pre-commit-config.yaml') }}

      - name: Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry env use python3.10
          poetry  install
      - name: Code checks
        run: |
          poetry run pre-commit run --all-files --show-diff-on-failure

  build:
    if: "!contains(github.event.head_commit.message, 'WIP')"
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: ["3.8", "3.9", "3.10"]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Poetry
        uses: actions/cache@v3
        with:
          path: |
            ~/.local
            ~/.cache/pypoetry/cache
            ~/.cache/pypoetry/artifacts
            ~/work/aws-pi-reports/aws-pi-reports/.venv
          key: poetry-cache-${{ runner.os }}-${{ hashFiles('**/poetry.lock','**/.pre-commit-config.yaml') }}

      - name: Install dependencies
        run: |
          poetry config installer.parallel false
          poetry config virtualenvs.in-project true
          poetry env use python${{ matrix.python-version }}
          poetry install

      - name: Test with pytest
        run: |
          poetry run pytest -n auto

  coverage:
    if: "!contains(github.event.head_commit.message, 'WIP')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Cache Poetry
        uses: actions/cache@v3
        with:
          path: |
            ~/.local
            ~/.cache/pypoetry/cache
            ~/.cache/pypoetry/artifacts
            ~/work/aws-pi-reports/aws-pi-reports/.venv
          key: poetry-cache-${{ runner.os }}-${{ hashFiles('**/poetry.lock','**/.pre-commit-config.yaml') }}

      - name: Install dependencies
        run: |
          poetry   config virtualenvs.in-project true
          poetry env use python3.10
          poetry install
      - name: Run coverage tests
        run: |
          poetry run pytest --cov-report html:./docs/coverage/html --cov-report xml:./docs/coverage/coverage.xml --cov-report term  --cov=pyrelax tests/
